name: Release

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  publish-state-fold-types:
    name: ðŸŒŽ Publish eth-state-fold-types crate
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: ðŸŒŽ Publish eth-state-fold-types
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p eth-state-fold-types

  publish-block-history:
    name: ðŸŒŽ Publish eth-block-history crate
    needs: publish-state-fold-types
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: ðŸŒŽ Publish eth-block-history
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p eth-block-history

  publish-state-fold:
    name: ðŸŒŽ Publish eth-state-fold crate
    needs:
      - publish-block-history
      - publish-state-fold-types
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: ðŸŒŽ Publish eth-state-fold
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p eth-state-fold

  publish-state-server-common:
    name: ðŸŒŽ Publish eth-state-server-common crate
    needs: publish-state-fold-types
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: ðŸ“¦ Install protoc
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y protobuf-compiler libprotobuf-dev

      - name: ðŸŒŽ Publish eth-state-server-common
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p eth-state-server-common

  publish-state-server-lib:
    name: ðŸŒŽ Publish eth-state-server-lib crate
    needs:
      - publish-block-history
      - publish-state-fold
      - publish-state-fold-types
      - publish-state-server-common
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: ðŸ“¦ Install protoc
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y protobuf-compiler libprotobuf-dev

      - name: ðŸŒŽ Publish eth-state-server-lib
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p eth-state-server-lib

  publish-state-client-lib:
    name: ðŸŒŽ Publish eth-state-client-lib crate
    needs:
      - publish-state-fold-types
      - publish-state-server-common
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: ðŸ“¦ Install protoc
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y protobuf-compiler libprotobuf-dev

      - name: ðŸŒŽ Publish eth-state-client-lib
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p eth-state-client-lib
